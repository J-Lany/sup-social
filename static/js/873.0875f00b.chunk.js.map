{"version":3,"file":"static/js/873.0875f00b.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Dialog_item__RvLX5\",\"person\":\"Dialog_person__x-4sj\",\"active\":\"Dialog_active__RnDaX\"};","import classes from \"./Dialog.module.css\"\nimport { NavLink } from \"react-router-dom\";\n\nconst Dialog = (props) => {\n    return (\n        <div className={classes.item}>\n\n            <NavLink to={\"/dialogs/\" + props.id} className={navData => navData.isActive ? classes.active : classes.item}>\n                <div className={classes.person}>\n                    <img src={props.ava} alt=\"avatarla\" />\n                    {props.name}\n                </div>\n            </NavLink>\n        </div>\n    )\n}\n\nexport default Dialog;","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Message_messages__eByBY\"};","import classes from \"./Message.module.css\"\n\nconst Message = (props) => {\n    return (\n        <div className={classes.message}>{props.message}</div>\n    )\n}\nexport default Message;","import classes from \"./Dialogs.module.css\"\nimport Dialog from \"./Dialog/Dialog\";\nimport Message from \"./Message/Message\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../common/FormsControls/FormControls\";\nimport { required, maxLength } from \"../../utils/validators\";\n\nfunction Dialogs(props) {\n    let dialogElements = props.messagesPage.dialogsData.map((dObj) => <Dialog name={dObj.name} id={dObj.id} key={dObj.id} ava={dObj.avatar} />);\n    let messageElements = props.messagesPage.messagesData.map((mObj) => <Message message={mObj.message} key={mObj.id} />);\n\n    const onSubmit = (formData) => {\n        props.addMessage(formData.newMessage);\n    }\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>\n                {dialogElements}\n            </div>\n            <div className={classes.messages}>\n                <div>{messageElements}</div>\n                <div>\n                    <div>\n                        <AddMessageReduxForm onSubmit={onSubmit}/>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Dialogs;\n\nlet maxLength500 = maxLength(500)\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field\n                component={Textarea}\n                placeholder={\"Enter your message\"}\n                name={\"newMessage\"} \n                validate={[required, maxLength500]}\n                />\n            </div>\n            <div>\n                <button className={classes.button}>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddMessageReduxForm = reduxForm({ form: 'dialogAddMessage' })(AddMessageForm)\n","import { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/WithAuthRedirect\";\nimport { addMessageActionCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\n\n// function DialogsContainer(props) {\n//     return (\n//       <StoreContext.Consumer>\n//         {(store) => {\n//               let state = store.getState().messagesPage;\n\n//               let onSendMessageClick = () => {\n//                   store.dispatch(addMessageActionCreator());\n//               };\n          \n//               let onNewMessageChange = (body) => {\n//                   let action = updateMessageActionCreator(body);\n//                   store.dispatch(action);\n//               }\n//             return (\n//                 <Dialogs\n//                 state={state}\n//                 addMessage={onSendMessageClick}\n//                 updateNewMessageBody={onNewMessageChange}\n//                 />\n//             )\n//         }}\n//       </StoreContext.Consumer>\n//     )\n// }\n\nlet mapStateToProps = (state) => {\nreturn {\n    messagesPage: state.messagesPage,\n}\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMessageText) => {\n            dispatch(addMessageActionCreator(newMessageText));\n        }\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);\n\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPopsForRedirecr = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render () {\n            if (!this.props.isAuth) return <Navigate to={\"/login\"} />\n            \n            return <Component {...this.props}/>\n        }\n    } \n    \n   let  ConnectedAuthRedirectComponent = connect(mapStateToPopsForRedirecr)(RedirectComponent)\n    return ConnectedAuthRedirectComponent;\n}"],"names":["props","_jsx","className","classes","children","NavLink","to","id","navData","isActive","_jsxs","src","ava","alt","name","message","dialogElements","messagesPage","dialogsData","map","dObj","Dialog","avatar","messageElements","messagesData","mObj","Message","dialogs","dialogsItems","messages","AddMessageReduxForm","onSubmit","formData","addMessage","newMessage","maxLength500","maxLength","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","validate","required","button","compose","connect","state","dispatch","newMessageText","addMessageActionCreator","withAuthRedirect","Dialogs","mapStateToPopsForRedirecr","isAuth","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","Navigate","React"],"sourceRoot":""}